version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: oprix-ctf-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-oprix_admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: ${DB_NAME:-oprix_ctf}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - oprix-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-oprix_admin}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    container_name: oprix-ctf-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - oprix-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # NestJS Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oprix-ctf-backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DATABASE_URL: postgresql://${DB_USER:-oprix_admin}:${DB_PASSWORD:-changeme}@postgres:5432/${DB_NAME:-oprix_ctf}?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      CLERK_FRONTEND_API: ${CLERK_FRONTEND_API}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      SUPERADMIN_PASSWORD: ${SUPERADMIN_PASSWORD}
    ports:
      - "${APP_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - oprix-network
    volumes:
      - uploads:/app/uploads
    restart: unless-stopped
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma generate &&
        npm run prisma:seed &&
        node dist/main.js
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local

networks:
  oprix-network:
    driver: bridge
